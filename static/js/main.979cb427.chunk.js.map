{"version":3,"sources":["i18n.js","constants/config.js","reducers/date.js","reducers/map.js","reducers/videoPoints.js","reducers/index.js","constants/action_names.js","actions/videoPoints.js","components/DatePicker.js","actions/date.js","components/VideoLayer.js","components/VideoPopup.js","components/ZadRaster.js","components/MapFrame.js","components/TextOverlay.js","App.js","serviceWorker.js","index.js"],"names":["i18n","use","LanguageDetector","XhrBackend","initReactI18next","init","backend","loadPath","crossDomain","fallbackLng","keySeparator","interpolation","escapeValue","MINIMUM_DATE","moment","START_DATE","initialState","date","loading","points","convertElements","elements","map","e","date_end","date_start","latitude","parseFloat","longitude","combineReducers","state","action","type","videoPoints","data","Sheet1","error","fetchVideoPoints","dispatch","tabletop","key","then","catch","DatePicker","props","useState","isDragging","setIsDragging","svgElement","useRef","useTranslation","t","useSelector","useDispatch","startDate","toDate","endDate","Date","dateScale","d3","domain","range","years","every","className","locale","language","format","ref","viewBox","onMouseUp","onMouseLeave","onMouseMove","preventDefault","x","event","CTM","current","getScreenCTM","clientX","a","y","clientY","f","d","getMousePosition","setDate","invert","height","year","toISOString","r","cx","cy","onMouseDown","fallback","VideoLayer","onMouseEnter","onVideoSelect","currentVideos","filter","point","isBetween","id","paint","coordinates","properties","onClick","feature","VideoPopup","onClose","selectedVideo","geometry","videoId","video_url","slice","lastIndexOf","name_en","video","autoplay","ZadRaster","useMemo","tileJsonSource","scheme","tiles","tileSize","sourceId","minZoom","Map","ReactMapboxGl","accessToken","MapFrame","setMap","mouseOverVideo","setMouseOverVideo","selectVideo","hash","useLocation","split","zoom","lat","lng","center","useHash","setHash","parts","push","toFixed","window","location","join","getCenter","maplat","maplng","getZoom","classNames","style","onStyleLoad","onMoveEnd","onZoomEnd","TextOverlay","App","useEffect","Boolean","hostname","match","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.979cb427.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport XhrBackend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport 'moment/locale/fr';\n\nconst backend = {\n  loadPath: '/locales/{{lng}}.json',\n  crossDomain: true,\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(XhrBackend)\n  .use(initReactI18next)\n  .init({\n    backend,\n\n    fallbackLng: \"en\",\n\n    keySeparator: false,\n\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;\n","import moment from 'moment';\n\nexport const MINIMUM_DATE = moment('2000-01-01')\nexport const START_DATE = moment('2015-01-01')\nexport const VIDEO_POINTS_FILE = 'https://docs.google.com/spreadsheets/d/1JUccBmHZ2EkA5tNhmpj6fAUaOxU0dyg1eGITTYqYuiw/edit#gid=0';\n","import { DATE_SET } from '../constants/action_names';\nimport { START_DATE } from '../constants/config';\n\nconst initialState = {\n  date: START_DATE\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case DATE_SET:\n      return {\n        ...state,\n        date: action.date\n      };\n    default:\n      return state;\n  }\n}\n","const initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n","import moment from 'moment';\nimport {\n  VIDEO_POINTS_REQUEST,\n  VIDEO_POINTS_RESPONSE,\n  VIDEO_POINTS_ERROR_RESPONSE\n} from '../constants/action_names';\n\nconst initialState = {\n  loading: false,\n  points: []\n};\n\nconst convertElements = elements => (\n  elements.map(e => ({\n    ...e,\n    date_end: moment(e.date_end),\n    date_start: moment(e.date_start),\n    latitude: parseFloat(e.latitude),\n    longitude: parseFloat(e.longitude)\n  }))\n);\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case VIDEO_POINTS_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case VIDEO_POINTS_RESPONSE:\n      return {\n        ...state,\n        points: convertElements(action.data.Sheet1.elements)\n      };\n    case VIDEO_POINTS_ERROR_RESPONSE:\n      return {\n        ...state,\n        error: action.error\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport date from './date';\nimport map from './map';\nimport videoPoints from './videoPoints';\n\nexport default combineReducers({\n  date,\n  map,\n  videoPoints\n});\n","export const DATE_SET = 'DATE_SET';\n\nexport const VIDEO_POINTS_REQUEST = 'VIDEO_POINTS_REQUEST';\nexport const VIDEO_POINTS_RESPONSE = 'VIDEO_POINTS_RESPONSE';\nexport const VIDEO_POINTS_ERROR_RESPONSE = 'VIDEO_POINTS_ERROR_RESPONSE';\n","import * as actions from \"../constants/action_names\";\nimport { VIDEO_POINTS_FILE } from \"../constants/config\";\nimport tabletop from 'tabletop';\n\nexport const fetchVideoPoints = () => {\n  return dispatch => {\n    dispatch({\n      type: actions.VIDEO_POINTS_REQUEST\n    });\n\n    tabletop.init({\n      key: VIDEO_POINTS_FILE\n    })\n      .then(data => {\n        dispatch({\n          type: actions.VIDEO_POINTS_RESPONSE,\n          data\n        });\n      })\n      .catch(error =>\n        dispatch({\n          type: actions.VIDEO_POINTS_ERROR_RESPONSE,\n          error\n        })\n      );\n  };\n};\n","import React, { Suspense, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport * as d3 from 'd3';\nimport moment from 'moment';\n\nimport { setDate } from '../actions/date';\nimport { MINIMUM_DATE } from '../constants/config';\nimport './DatePicker.scss';\n\nconst DatePicker = (props) => {\n  const [isDragging, setIsDragging] = useState(false);\n  const svgElement = useRef(null);\n\n  // eslint-disable-next-line\n  const { t, i18n } = useTranslation();\n  const date = useSelector(state => state.date.date);\n  const dispatch = useDispatch();\n\n  const width = 1200;\n  const height = 100;\n\n  const startDate = MINIMUM_DATE.toDate();\n  const endDate = new Date();\n\n  const dateScale = d3.scaleTime()\n    .domain([startDate, endDate])\n    .range([0, width]);\n\n  const years = d3.timeYear.every(1).range(startDate, endDate);\n\n  // Get the mouse position within the SVG element\n  const getMousePosition = event => {\n    const CTM = svgElement.current.getScreenCTM();\n    return {\n      x: (event.clientX - CTM.e) / CTM.a,\n      y: (event.clientY - CTM.f) / CTM.d\n    };\n  }\n\n  return (\n    <div className='DatePicker'>\n      <div className='DatePicker-display'>\n        {date.locale(i18n.language).format('MMMM YYYY')}\n      </div>\n      <div className='DatePicker-container'>\n        <svg \n          ref={svgElement}\n          viewBox={`0 0 ${width} ${height}`}\n          onMouseUp={() => setIsDragging(false)}\n          onMouseLeave={() => setIsDragging(false)}\n          onMouseMove={e => {\n            e.preventDefault();\n            if (isDragging) {\n              const { x } = getMousePosition(e);\n              dispatch(setDate(moment(dateScale.invert(x))));\n            }\n          }}\n        >\n          <g>\n            <path\n              d={d3.line()([\n                [dateScale(startDate), height / 2],\n                [dateScale(endDate), height / 2]\n              ])}\n              className='timeline'\n            />\n          </g>\n          <g>\n            {years.map(year => (\n              <path\n                key={year.toISOString()}\n                d={d3.line()([\n                  [dateScale(year), height / 2 - height / 4],\n                  [dateScale(year), height / 2 + height / 4]\n                ])}\n                className='tick'\n              />\n            ))}\n          </g>\n          <g>\n            <circle\n              className='current-date-marker'\n              r='10'\n              cx={dateScale(date.toDate())}\n              cy={height / 2}\n              onMouseDown={() => setIsDragging(true)}\n            />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default () => (\n  <Suspense fallback='loading'>\n    <DatePicker/>\n  </Suspense>\n);\n","import { DATE_SET } from \"../constants/action_names\";\n\nexport const setDate = (date) => {\n  return {\n    date,\n    type: DATE_SET\n  };\n};\n","import React from 'react';\nimport { Layer, Feature } from \"react-mapbox-gl\";\nimport { useSelector } from 'react-redux';\n\nconst VideoLayer = ({ onMouseEnter, onMouseLeave, onVideoSelect }) => {\n  const date = useSelector(state => state.date.date);\n  const videoPoints = useSelector(state => state.videoPoints.points);\n\n  const currentVideos = videoPoints.filter(point => \n    date.isBetween(point.date_start, point.date_end, null, '[]')\n  );\n\n  return (\n    <Layer\n      id='videos'\n      type='circle'\n      paint={{\n        'circle-color': '#000000',\n        'circle-radius': 15\n      }}\n    >\n      {currentVideos.map(point => (\n        <Feature\n          key={point.id}\n          coordinates={[point.longitude, point.latitude]}\n          properties={point}\n          onClick={e => onVideoSelect(e.feature)}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n        />\n      ))}\n    </Layer>\n  );\n}\n\nexport default VideoLayer;\n","import React from 'react';\nimport { Popup } from \"react-mapbox-gl\";\nimport Vimeo from '@u-wave/react-vimeo';\n\nimport './VideoPopup.scss';\n\nconst VideoPopup = ({ onClose, selectedVideo }) => {\n  const { geometry, properties } = selectedVideo;\n  const videoId = properties.video_url.slice(properties.video_url.lastIndexOf('/') + 1);\n  return (\n    <Popup coordinates={geometry.coordinates} className='VideoPopup'>\n      <header>\n        {properties.name_en}\n        <div className='btn-close' onClick={() => onClose()}>&times;</div>\n      </header>\n      <Vimeo video={videoId} autoplay />\n    </Popup>\n  );\n};\n\nexport default VideoPopup;\n","import React, { useMemo } from 'react';\nimport { Layer, Source } from 'react-mapbox-gl';\n\nconst ZadRaster = () => {\n  const layer = useMemo(() => {\n    const RASTER_SOURCE_OPTIONS = {\n      scheme: \"tms\",\n      type: \"raster\",\n      tiles: [\"./tiles/zad-2015/{z}/{x}/{y}.png\"],\n      tileSize: 256\n    };\n\n    return (\n      <>\n        <Source id=\"zad_raster_source\" tileJsonSource={RASTER_SOURCE_OPTIONS} />\n        <Layer type=\"raster\" id=\"zad_raster_layer\" sourceId=\"zad_raster_source\" minZoom={11} />\n      </>\n    );\n  }, []);\n\n  return layer;\n};\n\nexport default ZadRaster;\n","import React, { useState } from 'react';\nimport ReactMapboxGl, { ZoomControl } from \"react-mapbox-gl\";\nimport classNames from 'classnames';\nimport { useLocation } from \"react-router-dom\";\n\nimport VideoLayer from './VideoLayer';\nimport VideoPopup from './VideoPopup';\nimport ZadRaster from './ZadRaster';\nimport './MapFrame.scss';\n\nconst Map = ReactMapboxGl({\n  accessToken: \"\"\n});\n\nfunction useHash() {\n  const [zoom, lat, lng] = useLocation().hash.slice(1)\n    .split('/')\n    .map(parseFloat);\n  if (!(zoom && lat && lng)) return {};\n  return {\n    center: { lat, lng },\n    zoom,\n  }\n}\n\nconst MapFrame = (props) => {\n  const [map, setMap] = useState(null);\n  const [mouseOverVideo, setMouseOverVideo] = useState(false);\n  const [selectedVideo, selectVideo] = useState(null);\n\n  const hash = useHash();\n\n  function setHash({ center, zoom }) {\n    const parts = [];\n\n    parts.push(zoom.toFixed(1));\n    parts.push(center.lat.toFixed(3));\n    parts.push(center.lng.toFixed(3));\n\n    window.location.hash = parts.join('/');\n  }\n\n  let center = [-1.734, 47.349];\n  if (map) {\n    center = map.getCenter();\n  }\n  else if (hash.maplat && hash.maplng) {\n    center = [hash.maplng, hash.maplat];\n  }\n\n  let zoom = 13;\n  if (map) {\n    zoom = map.getZoom();\n  }\n  else if (hash.zoom) {\n    zoom = hash.zoom;\n  }\n\n  return (\n    <div className={classNames('MapFrame', {\n      'over-point': mouseOverVideo\n    })}>\n      {/* eslint-disable-next-line */}\n      <Map\n        style=\"https://api.maptiler.com/maps/basic/style.json?key=RTkrAcFuX6L6NwSiRn6b\" \n        onStyleLoad={setMap}\n        onMoveEnd={map => setHash({ center: map.getCenter(), zoom: map.getZoom() })}\n        onZoomEnd={map => setHash({ center: map.getCenter(), zoom: map.getZoom() })}\n        center={center}\n        zoom={[zoom]}\n      >\n        <ZoomControl/>\n\n        <ZadRaster/>\n\n        <VideoLayer\n          onMouseEnter={video => setMouseOverVideo(true)}\n          onMouseLeave={video => setMouseOverVideo(false)}\n          onVideoSelect={video => selectVideo(video)}\n        />\n\n        {selectedVideo ? (\n          <VideoPopup \n            onClose={() => selectVideo(null)}\n            selectedVideo={selectedVideo}\n          />\n        ) : null}\n      </Map>\n    </div>\n  )\n};\n\nexport default MapFrame;\n","import React from 'react';\n\nimport './TextOverlay.scss';\n\nconst TextOverlay = () => {\n  return (\n    <div className='TextOverlay'>\n      <h1>ZAD video archive</h1>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi malesuada ullamcorper iaculis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis quis ultrices quam. Aliquam suscipit a turpis aliquet semper.</p>\n      <p>Nulla sodales lacus eu elit luctus, auctor feugiat quam lobortis. Sed in sodales neque. Nunc tempor non nisl a pellentesque. Nunc vel eros ac ex efficitur aliquam id nec diam. Duis iaculis augue in blandit suscipit. Nullam id sollicitudin lectus. Sed eros quam, porta vitae vehicula in, sodales luctus turpis. Nulla sem elit, cursus sit amet nulla id, euismod ornare turpis.</p>\n    </div>\n  );\n};\n\nexport default TextOverlay;\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.css';\nimport { fetchVideoPoints } from './actions/videoPoints';\nimport DatePicker from './components/DatePicker';\nimport MapFrame from './components/MapFrame';\nimport TextOverlay from './components/TextOverlay';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchVideoPoints()), [dispatch]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <TextOverlay/>\n        <MapFrame/>\n        <DatePicker/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport thunkMiddleware from 'redux-thunk';\nimport './i18n';\n\nimport rootReducer from './reducers';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={createStore(rootReducer, applyMiddleware(thunkMiddleware))}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>, document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}